#include <stdio.h>
#include <string.h>
int board[21][21];
// record the position
int weight[21][21];
int have_win(int o){
    int x,y;
    int i,j;
    for(x=1; x<20; x++){
        for(y=1; y<20; y++){
            int chese_number1=0,chese_number2=0,chese_number3=0,chese_number4=0;
            if(board[x][y]==0) continue;
            for(i=-4; i<=4; i++){
                //check the border
                if(x-i>0&&x-i<20&&y-i>0&&y-i<20){
                    if(board[x-i][y-i]==o){
                        chese_number1++;


                    }else{
                        chese_number1=0;
                    }
                }
                if(x-i>0&&x-i<20&&y+i>0&&y+i<20){
                    if(board[x-i][y+i]==o){
                        chese_number2++;

                    }else{
                        chese_number2=0;
                    }
                }
                if(x-i>0&&x-i<20){
                    if(board[x-i][y]==o){
                        chese_number3++;

                    }else{
                        chese_number3=0;
                    }
                }
                if(y-i>0&&y-i<20){
                    if(board[x][y-i]==o){
                        chese_number4++;
                    }else{
                        chese_number4=0;
                    }
                }

            }
            if(chese_number4==5||chese_number3==5||chese_number2==5||chese_number1==5)
            return 1;
        }
    }
    return 0;


}

int DFS(int x,int y, int n,int type,int ori_x,int ori_y){
    x+=ori_x;y+=ori_y;
    if(x>0&&x<20&&y>0&&y<20){
        if(board[x][y]==type){
            DFS(x,y,n+1,type,ori_x,ori_y);
        }else{
            return n;
        }
    }else{
//        printf("%d\n",n);
        return n;
    }
}
void build();
int c1,c2; //calculate the 1 's and 2 's number
int main(){
//    freopen("test1.txt","r",stdin);
    int order;
	int n;
	int i,j,k;
	while(scanf("%d",&n)==1){
        while(n--){
//            printf("WW%d\n",n);
            scanf("%d",&order);
            for(i=1; i<20; i++){
                for(j=1; j<20; j++){
                    scanf("%d",&board[i][j]);
                }
            }
            int op; //對手的棋子
            if(order==1)op=2;
            else op=1;
            if(have_win(2)) {printf("1 1"); }
            else if(have_win(1)){ printf("1 2"); }
            else{

    //
                c1=c2=0;
                // 建表
                build();
                int t,k;
                //印出權重表
//                for(t=1; t<20; t++){
//                    for(k=1; k<20; k++){
//                        printf("%d ",weight[t][k]);
//                    }
//                    puts("");
//                }
//                puts("");

                int win=0;
                int first=1;

                for(i=1; i<20; i++){
                    for(j=1; j<20; j++){

                        if(weight[i][j]%10==order||weight[i][j]/10==order){
                            if(first){
                                win=1;
                                printf("2");
                                first=0;
                            }
                            printf(" %d %d",i,j);
                        }
                    }
                }

                 if(!win){
                    if(order==1&&c2>1){
                        {printf("3");}
                    }else if(order==2&&c1>1){
                        { printf("3"); }
                    }else{
                         for(i=1; i<=20; i++){
                            for(j=1; j<=20; j++){
                                if(weight[i][j]/10==op||weight[i][j]%10==op){
                                    if(order==1&&c2<=1) printf("4 %d %d",i,j);
                                    else if(order==2&&c1<=1) printf("4 %d %d",i,j);
                                }
                            }
                         }
                    }
                }
            }
            if(n) puts("\n");



        }
	}
	return 0;
}
void build(){
    int i,j;
    memset(weight,0,sizeof(weight));
    for(i=1; i<20; i++){
        for(j=1; j<20; j++){
            if(board[i][j]==0){
                int n;
                n=DFS(i,j,0,1,1,0)+DFS(i,j,0,1,-1,0);
                n=(DFS(i,j,0,1,0,1)+DFS(i,j,0,1,0,-1))>n?DFS(i,j,0,1,0,1)+DFS(i,j,0,1,0,-1):n;
                n=(DFS(i,j,0,1,1,1)+DFS(i,j,0,1,-1,-1))>n?DFS(i,j,0,1,1,1)+DFS(i,j,0,1,-1,-1):n;
                n=(DFS(i,j,0,1,1,-1)+DFS(i,j,0,1,-1,1))>n?DFS(i,j,0,1,1,-1)+DFS(i,j,0,1,-1,1):n;

                //如果活四就標記
                if(n==4){
                    weight[i][j]=1;
                    c1++;
                }

                n=DFS(i,j,0,2,1,0)+DFS(i,j,0,2,-1,0);
                n=(DFS(i,j,0,2,0,1)+DFS(i,j,0,2,0,-1))>n?DFS(i,j,0,2,0,1)+DFS(i,j,0,2,0,-1):n;
                n=(DFS(i,j,0,2,1,1)+DFS(i,j,0,2,-1,-1))>n?DFS(i,j,0,2,1,1)+DFS(i,j,0,2,-1,-1):n;
                n=(DFS(i,j,0,2,1,-1)+DFS(i,j,0,2,-1,1))>n?DFS(i,j,0,2,1,-1)+DFS(i,j,0,2,-1,1):n;

                //如果活四就標記
                if(n==4){
                    weight[i][j]+=20;
                    c2++;
                }
            }
//            int t,k;
            //印出權重表
//            for(t=1; t<20; t++){
//                for(k=1; k<20; k++){
//                    printf("%d ",weight[t][k]);
//                }
//                puts("");
//            }
//            puts("");

        }
    }
}
